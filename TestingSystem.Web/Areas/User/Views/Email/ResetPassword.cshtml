@model TestingSystem.Web.Areas.User.Data.ResetPasswordModel

@using (Html.BeginForm("ResetPassword", "Email", FormMethod.Post, new { @class = "container" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal col-12 col-sm-10 col-md-8 col-lg-5 p-5 my-4 mx-auto bg-white rounded shadow">
        
        @Html.Hidden("userId", (object)ViewBag.UserId)
        @Html.Hidden("code", (object)ViewBag.Code)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label mt-3 mb-2" })
            <div>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control  rounded-pill" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label mb-2" })
            <div>
                @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control  rounded-pill" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="px-4 mt-4 pt-2 text-center">
                <input type="submit" value="Set the password" class="btn btn-primary w-100 rounded-pill mb-3" />
                <small class="small text-muted">New password will be set</small>
            </div>
        </div>
    </div>
}
